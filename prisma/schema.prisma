// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  name          String
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  conversations Conversation[]

  @@map("users")
}

model Conversation {
  id               Int      @id @default(autoincrement())
  title            String
  difyConversationId String? // Dify API的conversation_id
  userId           Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages         Message[]

  @@map("conversations")
}

model Message {
  id             Int      @id @default(autoincrement())
  content        String
  isUser         Boolean
  conversationId Int
  files          Json?    // 存储文件信息的JSON
  createdAt      DateTime @default(now())
  
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("messages")
}
